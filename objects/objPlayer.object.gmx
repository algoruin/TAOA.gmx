<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlayerBot</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
image_index = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>friction = 0.5;
var spd = 4;
var minY =  room_height / 3;
// vertical movement
if(keyboard_check(ord('S')))
{
    image_speed = 0.3;
    sprite_index = sprPlayerBot;
    vspeed = spd;
}
if(keyboard_check(ord('Z')) &amp;&amp; y &gt; minY)
{
    image_speed = 0.3;
    sprite_index = sprPlayerTop;
    vspeed = -spd;
}
// horizontal movement
if(keyboard_check(ord('D')))
{
    image_speed = 0.2;
    sprite_index = sprPlayerRight;
    hspeed = spd;
}
if(keyboard_check(ord('Q')) &amp;&amp; y &gt; minY)
{
    image_speed = 0.2;
    sprite_index = sprPlayerLeft;
    hspeed = -spd;
}
// checking for middle of screen
if(y &lt; minY)
{
    y = minY;
    if(keyboard_check(ord('Z')))
    {
        image_speed = 0;
        vspeed = 0;
    }
}
// if no button is pressed
if(!keyboard_check(ord('S')) &amp;&amp; !keyboard_check(ord('Z')) &amp;&amp; !keyboard_check(ord('D')) &amp;&amp; !keyboard_check(ord('Q')))
{
    image_speed = 0;
}
// check for combat
if(mouse_check_button_pressed(mb_left))
{
    obj = collision_point(mouse_x, mouse_y, objEnemy, true, true);
    if(obj != noone)
    {
        createCombat(obj);
        room_goto(rmCombat);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var scale = point_distance(x, y, x, 0) / (view_hview[0] / 10);
image_xscale = scale;
image_yscale = scale;
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
